"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const dom_1 = require("@oozcitak/dom");
const dom_2 = require("@oozcitak/dom/lib/dom");
dom_2.dom.setFeatures(false);
/**
 * Throws an error if the parser returned an error document.
 */
function throwIfParserError(doc) {
    const root = doc.documentElement;
    if (root !== null &&
        root.localName === "parsererror" &&
        root.namespaceURI === "http://www.mozilla.org/newlayout/xml/parsererror.xml") {
        const msgElement = root.firstElementChild;
        /* istanbul ignore next */
        if (msgElement === null)
            throw new Error("Error parsing XML string.");
        const msg = msgElement.getAttribute("message");
        /* istanbul ignore next */
        if (msg === null)
            throw new Error("Error parsing XML string.");
        throw new Error(msg);
    }
}
exports.throwIfParserError = throwIfParserError;
/**
 * Creates an XML document without any child nodes.
 */
function createDocument() {
    const impl = new dom_1.DOMImplementation();
    const doc = impl.createDocument(null, 'root', null);
    /* istanbul ignore else */
    if (doc.documentElement) {
        doc.removeChild(doc.documentElement);
    }
    return doc;
}
exports.createDocument = createDocument;
/**
 * Creates a DOM parser.
 */
function createParser() {
    return new dom_1.DOMParser();
}
exports.createParser = createParser;
//# sourceMappingURL=dom.js.map